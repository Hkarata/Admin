@implements IDisposable

@inject NavigationManager NavigationManager

<div id="container">

    <NavLink ActiveClass="active" Match="NavLinkMatch.All" href="/" class="myNav nav-item ">

        <FluentIcon Value="@(new Icons.Regular.Size24.Home())" Color="Color.Custom" CustomColor="#FFFFFF" />

        <span>Home</span>

    </NavLink>

    <NavLink href="/questions" class="myNav nav-item">

        <FluentIcon Value="@(new Icons.Regular.Size24.QuestionCircle())" Color="Color.Custom" CustomColor="#FFFFFF" />

        <span>Questions</span>

    </NavLink>

    <NavLink href="/drivers" class="myNav nav-item">

        <FluentIcon Value="@(new Icons.Regular.Size24.People())" Color="Color.Custom" CustomColor="#FFFFFF" />

        <span>Accounts</span>

    </NavLink>

    <NavLink href="/venues" class="myNav">
        <FluentIcon Value="@(new Icons.Regular.Size24.BuildingDesktop())" Color="Color.Custom" CustomColor="#FFFFFF" />
        <span>Venues</span>
    </NavLink>

</div>

@code
{
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

<style>
    .myNav {
        display: flex;
        flex-direction: row;
        align-items: center;
        text-decoration: none;
        font-family: Bahnschrift;
        font-size: 16px;
        color: #FFFFFF;
        padding: 6px;
        gap: 10px;
        border-radius: 5px;
    }

        .myNav span {
            flex: 1;
        }

        .myNav:hover {
            background-color: #171b24;
        }

    .active {
        background-color: #171b24;
    }
</style>
